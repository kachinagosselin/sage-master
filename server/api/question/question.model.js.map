{"version":3,"sources":["../../../../server/api/question/question.model.js"],"names":[],"mappings":"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","file":"question.model.js","sourcesContent":["'use strict';\n\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\n\nvar QuestionSchema = new mongoose.Schema({\n  title: String,\n  content: String,\n  answers: [{\n    content: String,\n    user: {\n      type: mongoose.Schema.ObjectId,\n      ref: 'User'\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    comments: [{\n      content: String,\n      stars: [{\n        type: mongoose.Schema.ObjectId,\n        ref: 'User'\n      }],\n      user: {\n        type: mongoose.Schema.ObjectId,\n        ref: 'User'\n      },\n      createdAt: {\n        type: Date,\n        default: Date.now,\n      }\n    }],\n    stars: [{\n      type: mongoose.Schema.ObjectId,\n      ref: 'User'\n    }],\n  }],\n  tags: [{\n    text: String,\n  }],\n  user: {\n    type: mongoose.Schema.ObjectId,\n    ref: 'User'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  comments: [{\n    content: String,\n    stars: [{\n      type: mongoose.Schema.ObjectId,\n      ref: 'User'\n    }],\n    user: {\n      type: mongoose.Schema.ObjectId,\n      ref: 'User'\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    }\n  }],\n  stars: [{\n    type: mongoose.Schema.ObjectId,\n    ref: 'User'\n  }],\n  searchText: String,\n});\nQuestionSchema.pre('find', function(next){\n  this.populate('user', 'name');\n  this.populate('comments.user', 'name');\n  this.populate('answers.user', 'name');\n  this.populate('answers.comments.user', 'name');\n  next();\n});\nQuestionSchema.pre('findOne', function(next){\n  this.populate('user', 'name');\n  this.populate('comments.user', 'name');\n  this.populate('answers.user', 'name');\n  this.populate('answers.comments.user', 'name');\n  next();\n});\n\nQuestionSchema.index({\n  'title': 'text',\n  'content': 'text',\n  'tags.text': 'text',\n  'answers.content': 'text',\n  'comments.content': 'text',\n  'answers.comments.content': 'text',\n  'searchText': 'text',\n}, {name: 'question_schema_index'});\n\nvar TinySegmenter = require('tiny-segmenter');\n\nvar getSearchText = function(question){\n  var tinySegmenter = new TinySegmenter();\n  var searchText = \"\";\n  searchText += tinySegmenter.segment(question.title).join(' ') + \" \";\n  searchText += tinySegmenter.segment(question.content).join(' ') + \" \";\n  question.answers.forEach(function(answer){\n    searchText += tinySegmenter.segment(answer.content).join(' ') + \" \";\n    answer.comments.forEach(function(comment){\n      searchText += tinySegmenter.segment(comment.content).join(' ') + \" \";\n    });\n  });\n  question.comments.forEach(function(comment){\n    searchText += tinySegmenter.segment(comment.content).join(' ') + \" \";\n  });\n  console.log(\"searchText\", searchText);\n  return searchText;\n};\nQuestionSchema.statics.updateSearchText = function(id, cb){\n  this.findOne({_id: id}).exec(function(err, question){\n    if(err){ if(cb){cb(err);} return; }\n    var searchText = getSearchText(question);\n    this.update({_id: id}, {searchText: searchText}, function(err, num){\n      if(cb){cb(err);}\n    });\n  }.bind(this));\n};\n\nQuestionSchema.pre('save', function(next){\n  this.searchText = getSearchText(this);\n  next();\n});\n\nexport default mongoose.model('Question', QuestionSchema);\n"]}