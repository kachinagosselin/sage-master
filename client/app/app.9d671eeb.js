"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}angular.module("sageApp",["sageApp.auth","sageApp.admin","sageApp.constants","ngCookies","ngResource","ngSanitize","btford.socket-io","ui.router","ui.bootstrap","validation.match","ui.pagedown","ngTagsInput","ngMessages","infinite-scroll"]).config(["$urlRouterProvider","$locationProvider",function(a,b){a.otherwise("/"),b.html5Mode(!0)}]),angular.module("sageApp.auth",["sageApp.constants","sageApp.util","ngCookies","ui.router"]).config(["$httpProvider",function(a){a.interceptors.push("authInterceptor")}]),angular.module("sageApp.admin",["sageApp.auth","ui.router"]),angular.module("sageApp.util",[]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),SignupController=function(){function a(b,c){_classCallCheck(this,a),this.user={},this.errors={},this.submitted=!1,this.Auth=b,this.$state=c}return a.$inject=["Auth","$state"],_createClass(a,[{key:"register",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.createUser({name:this.user.name,email:this.user.email,password:this.user.password}).then(function(){b.$state.go("main")})["catch"](function(c){c=c.data,b.errors={},angular.forEach(c.errors,function(c,d){a[d].$setValidity("mongoose",!1),b.errors[d]=c.message})})}}]),a}();angular.module("sageApp").controller("SignupController",SignupController);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();!function(){var a=function(){function a(b){_classCallCheck(this,a),this.users=b.query()}return a.$inject=["User"],_createClass(a,[{key:"delete",value:function(a){a.$remove(),this.users.splice(this.users.indexOf(a),1)}}]),a}();angular.module("sageApp.admin").controller("AdminController",a)}(),angular.module("sageApp").config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginController",controllerAs:"vm"}).state("logout",{url:"/logout?referrer",referrer:"main",template:"",controller:["$state","Auth",function(a,b){var c=a.params.referrer||a.current.referrer||"main";b.logout(),a.go(c)}]}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupController",controllerAs:"vm"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsController",controllerAs:"vm",authenticate:!0})}]).run(["$rootScope",function(a){a.$on("$stateChangeStart",function(a,b,c,d){"logout"===b.name&&d&&d.name&&!d.authenticate&&(b.referrer=d.name)})}]),angular.module("sageApp.admin").config(["$stateProvider",function(a){a.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminController",controllerAs:"admin",authenticate:"admin"})}]),function(a,b){a.module("sageApp.constants",[]).constant("appConfig",{userRoles:["guest","user","admin"]})}(angular),angular.module("sageApp").filter("fromNow",function(){return function(a){return moment(a).locale(window.navigator.language).fromNow()}}),angular.module("sageApp").controller("QuestionsCreateCtrl",["$scope","$http","$location","Auth",function(a,b,c,d){return d.isLoggedIn()?void(a.submit=function(){b.post("/api/questions",a.question).success(function(){c.path("/")})}):(c.path("/login"),void c.replace())}]),angular.module("sageApp").config(["$stateProvider",function(a){a.state("questionsCreate",{url:"/questions/create",templateUrl:"app/questionsCreate/questionsCreate.html",controller:"QuestionsCreateCtrl"})}]),angular.module("sageApp").controller("QuestionsIndexCtrl",["$scope","$http","$location","Auth","query",function(a,b,c,d,e){var f=c.search().keyword;f&&(e=_.merge(e,{$text:{$search:f}})),a.busy=!0,a.noMoreData=!1,b.get("/api/questions",{params:{query:e}}).success(function(b){a.questions=b,a.questions.length<20&&(a.noMoreData=!0),a.busy=!1}),a.nextPage=function(){if(!a.busy){a.busy=!0;var c=a.questions[a.questions.length-1]._id,d=_.merge(e,{_id:{$lt:c}});b.get("/api/questions",{params:{query:d}}).success(function(b){a.questions=a.questions.concat(b),a.busy=!1,0===b.length&&(a.noMoreData=!0)})}},a.isStar=function(a){return d.isLoggedIn()&&a&&a.stars&&a.stars.indexOf(d.getCurrentUser()._id)!==-1}}]),angular.module("sageApp").config(["$stateProvider",function(a){a.state("main",{url:"/?keyword",templateUrl:"app/questionsIndex/questionsIndex.html",controller:"QuestionsIndexCtrl",resolve:{query:function(){return{}}}}).state("starredQuestionsIndex",{url:"/users/:userId/starred",templateUrl:"app/questionsIndex/questionsIndex.html",controller:"QuestionsIndexCtrl",resolve:{query:["$stateParams",function(a){return{$or:[{stars:a.userId},{"answers.stars":a.userId},{"comments.stars":a.userId},{"answers.comments.stars":a.userId}]}}]}}).state("userQuestionsIndex",{url:"/users/:userId",templateUrl:"app/questionsIndex/questionsIndex.html",controller:"QuestionsIndexCtrl",resolve:{query:["$stateParams",function(a){return{user:a.userId}}]}})}]),angular.module("sageApp").controller("QuestionsShowCtrl",["$scope","$http","$stateParams","Auth","$location",function(a,b,c,d,e){var f=function(){b.get("/api/questions/"+c.id).success(function(b){a.question=b})};f(),a.newAnswer={},a.submitAnswer=function(){b.post("/api/questions/"+c.id+"/answers",a.newAnswer).success(function(){f(),a.newAnswer={}})},a.deleteQuestion=function(){b["delete"]("/api/questions/"+c.id).success(function(){e.path("/")})},a.deleteAnswer=function(a){b["delete"]("/api/questions/"+c.id+"/answers/"+a._id).success(function(){f()})},a.updateQuestion=function(){b.put("/api/questions/"+c.id,a.question).success(function(){f()})},a.updateAnswer=function(a){b.put("/api/questions/"+c.id+"/answers/"+a._id,a).success(function(){f()})},a.isOwner=function(a){return d.isLoggedIn()&&a&&a.user&&a.user._id===d.getCurrentUser()._id},a.newComment={},a.submitComment=function(){b.post("/api/questions/"+c.id+"/comments",a.newComment).success(function(){f(),a.newComment={},a.editNewComment=!1})},a.submitAnswerComment=function(a){b.post("/api/questions/"+c.id+"/answers/"+a._id+"/comments",a.newAnswerComment).success(function(){f()})},a.deleteComment=function(a){b["delete"]("/api/questions/"+c.id+"/comments/"+a._id).success(function(){f()})},a.deleteAnswerComment=function(a,d){b["delete"]("/api/questions/"+c.id+"/answers/"+a._id+"/comments/"+d._id).success(function(){f()})},a.updateComment=function(a){b.put("/api/questions/"+c.id+"/comments/"+a._id,a).success(function(){f()})},a.updateAnswerComment=function(a,d){b.put("/api/questions/"+c.id+"/answers/"+a._id+"/comments/"+d._id,d).success(function(){f()})},a.isStar=function(a){return d.isLoggedIn()&&a&&a.stars&&a.stars.indexOf(d.getCurrentUser()._id)!==-1},a.star=function(c){b.put("/api/questions/"+a.question._id+c+"/star").success(function(){f()})},a.unstar=function(c){b["delete"]("/api/questions/"+a.question._id+c+"/star").success(function(){f()})}}]),angular.module("sageApp").config(["$stateProvider",function(a){a.state("questionsShow",{url:"/questions/show/:id",templateUrl:"app/questionsShow/questionsShow.html",controller:"QuestionsShowCtrl"})}]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),LoginController=function(){function a(b,c){_classCallCheck(this,a),this.user={},this.errors={},this.submitted=!1,this.Auth=b,this.$state=c}return a.$inject=["Auth","$state"],_createClass(a,[{key:"login",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.login({email:this.user.email,password:this.user.password}).then(function(){b.$state.go("main")})["catch"](function(a){b.errors.other=a.message})}}]),a}();angular.module("sageApp").controller("LoginController",LoginController),function(){function a(a,b,c,d,e,f,g){var h=f.safeCb,i={},j=e.userRoles||[];c.get("token")&&"/logout"!==a.path()&&(i=g.get());var k={login:function(a,e){var f=a.email,j=a.password;return b.post("/auth/local",{email:f,password:j}).then(function(a){return c.put("token",a.data.token),i=g.get(),i.$promise}).then(function(a){return h(e)(null,a),a})["catch"](function(a){return k.logout(),h(e)(a.data),d.reject(a.data)})},logout:function(){c.remove("token"),i={}},createUser:function(a,b){return g.save(a,function(d){return c.put("token",d.token),i=g.get(),h(b)(null,a)},function(a){return k.logout(),h(b)(a)}).$promise},changePassword:function(a,b,c){return g.changePassword({id:i._id},{oldPassword:a,newPassword:b},function(){return h(c)(null)},function(a){return h(c)(a)}).$promise},getCurrentUser:function(a){if(0===arguments.length)return i;var b=i.hasOwnProperty("$promise")?i.$promise:i;return d.when(b).then(function(b){return h(a)(b),b},function(){return h(a)({}),{}})},isLoggedIn:function(a){return 0===arguments.length?i.hasOwnProperty("role"):k.getCurrentUser(null).then(function(b){var c=b.hasOwnProperty("role");return h(a)(c),c})},hasRole:function l(a,b){var l=function(a,b){return j.indexOf(a)>=j.indexOf(b)};return arguments.length<2?l(i.role,a):k.getCurrentUser(null).then(function(c){var d=!!c.hasOwnProperty("role")&&l(c.role,a);return h(b)(d),d})},isAdmin:function(){return k.hasRole.apply(k,[].concat.apply(["admin"],arguments))},getToken:function(){return c.get("token")}};return k}a.$inject=["$location","$http","$cookies","$q","appConfig","Util","User"],angular.module("sageApp.auth").factory("Auth",a)}(),function(){function a(a,b,c,d,e){var f;return{request:function(a){return a.headers=a.headers||{},c.get("token")&&e.isSameOrigin(a.url)&&(a.headers.Authorization="Bearer "+c.get("token")),a},responseError:function(a){return 401===a.status&&((f||(f=d.get("$state"))).go("login"),c.remove("token")),b.reject(a)}}}a.$inject=["$rootScope","$q","$cookies","$injector","Util"],angular.module("sageApp.auth").factory("authInterceptor",a)}(),function(){angular.module("sageApp.auth").run(["$rootScope","$state","Auth",function(a,b,c){a.$on("$stateChangeStart",function(a,d){d.authenticate&&("string"==typeof d.authenticate?c.hasRole(d.authenticate,_.noop).then(function(d){if(!d)return a.preventDefault(),c.isLoggedIn(_.noop).then(function(a){b.go(a?"main":"login")})}):c.isLoggedIn(_.noop).then(function(c){c||(a.preventDefault(),b.go("main"))}))})}])}(),function(){function a(a){return a("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}a.$inject=["$resource"],angular.module("sageApp.auth").factory("User",a)}(),angular.module("sageApp").directive("footer",function(){return{templateUrl:"components/footer/footer.html",restrict:"E",link:function(a,b){b.addClass("footer")}}}),angular.module("sageApp").factory("Modal",["$rootScope","$modal",function(a,b){function c(){var c=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],d=arguments.length<=1||void 0===arguments[1]?"modal-default":arguments[1],e=a.$new();return angular.extend(e,c),b.open({templateUrl:"components/modal/modal.html",windowClass:d,scope:e})}return{confirm:{"delete":function(){var a=arguments.length<=0||void 0===arguments[0]?angular.noop:arguments[0];return function(){var b,d=Array.prototype.slice.call(arguments),e=d.shift();b=c({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+e+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(a){b.close(a)}},{classes:"btn-default",text:"Cancel",click:function(a){b.dismiss(a)}}]}},"modal-danger"),b.result.then(function(b){a.apply(b,d)})}}}}}]),angular.module("sageApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.on("keydown",function(){return d.$setValidity("mongoose",!0)})}}});var NavbarController=function a(b,c){_classCallCheck(this,a),this.isCollapsed=!0,this.menu=[{title:"All",link:function(){return"/"},show:function(){return!0}},{title:"Mine",link:function(){return"/users/"+b.getCurrentUser()._id},show:b.isLoggedIn},{title:"Starred",link:function(){return"/users/"+b.getCurrentUser()._id+"/starred"},show:b.isLoggedIn}],this.isLoggedIn=b.isLoggedIn,this.isAdmin=b.isAdmin,this.getCurrentUser=b.getCurrentUser,this.search=function(a){c.go("main",{keyword:a},{reload:!0})}};NavbarController.$inject=["Auth","$state"],angular.module("sageApp").controller("NavbarController",NavbarController),angular.module("sageApp").directive("navbar",function(){return{templateUrl:"components/navbar/navbar.html",restrict:"E",controller:"NavbarController",controllerAs:"nav"}}),angular.module("sageApp").controller("OauthButtonsCtrl",["$window",function(a){this.loginOauth=function(b){a.location.href="/auth/"+b}}]),angular.module("sageApp").directive("oauthButtons",function(){return{templateUrl:"components/oauth-buttons/oauth-buttons.html",restrict:"EA",controller:"OauthButtonsCtrl",controllerAs:"OauthButtons",scope:{classes:"@"}}}),angular.module("sageApp").factory("socket",["socketFactory",function(a){var b=io("",{path:"/socket.io-client"}),c=a({ioSocket:b});return{socket:c,syncUpdates:function(a,b,d){d=d||angular.noop,c.on(a+":save",function(a){var c=_.find(b,{_id:a._id}),e=b.indexOf(c),f="created";c?(b.splice(e,1,a),f="updated"):b.push(a),d(f,a,b)}),c.on(a+":remove",function(a){var c="deleted";_.remove(b,{_id:a._id}),d(c,a,b)})},unsyncUpdates:function(a){c.removeAllListeners(a+":save"),c.removeAllListeners(a+":remove")}}}]);var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),SettingsController=function(){function a(b){_classCallCheck(this,a),this.errors={},this.submitted=!1,this.Auth=b}return a.$inject=["Auth"],_createClass(a,[{key:"changePassword",value:function(a){var b=this;this.submitted=!0,a.$valid&&this.Auth.changePassword(this.user.oldPassword,this.user.newPassword).then(function(){b.message="Password successfully changed."})["catch"](function(){a.password.$setValidity("mongoose",!1),b.errors.other="Incorrect password",b.message=""})}}]),a}();angular.module("sageApp").controller("SettingsController",SettingsController),function(){function a(a){var b={safeCb:function(a){return angular.isFunction(a)?a:angular.noop},urlParse:function(a){var b=document.createElement("a");return b.href=a,""===b.host&&(b.href=b.href),b},isSameOrigin:function(c,d){return c=b.urlParse(c),d=d&&[].concat(d)||[],d=d.map(b.urlParse),d.push(a.location),d=d.filter(function(a){return c.hostname===a.hostname&&c.port===a.port&&c.protocol===a.protocol}),d.length>=1}};return b}a.$inject=["$window"],angular.module("sageApp.util").factory("Util",a)}(),angular.module("sageApp").run(["$templateCache",function(a){a.put("app/account/login/login.html",'<div class=container><div class=row><div class=col-sm-12><h1>Login</h1><p>Accounts are reset on server restart from <code>server/config/seed.js</code>. Default account is <code>test@example.com</code> / <code>test</code></p><p>Admin account is <code>admin@example.com</code> / <code>admin</code></p></div><div class=col-sm-12><form class=form name=form ng-submit=vm.login(form) novalidate><div class=form-group><label>Email</label><input type=email name=email class=form-control ng-model=vm.user.email required></div><div class=form-group><label>Password</label><input type=password name=password class=form-control ng-model=vm.user.password required></div><div class="form-group has-error"><p class=help-block ng-show="form.email.$error.required && form.password.$error.required && vm.submitted">Please enter your email and password.</p><p class=help-block ng-show="form.email.$error.email && vm.submitted">Please enter a valid email.</p><p class=help-block>{{ vm.errors.other }}</p></div><div><button class="btn btn-inverse btn-lg btn-login" type=submit>Login</button> <a class="btn btn-default btn-lg btn-register" ui-sref=signup>Register</a></div><hr><div class=row><div class="col-sm-4 col-md-3"><oauth-buttons classes=btn-block></oauth-buttons></div></div></form></div></div><hr></div>'),a.put("app/account/settings/settings.html",'<div class=container><div class=row><div class=col-sm-12><h1>Change Password</h1></div><div class=col-sm-12><form class=form name=form ng-submit=vm.changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=vm.user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ vm.errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=vm.user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || vm.submitted)">Password must be at least 3 characters.</p></div><div class=form-group><label>Confirm New Password</label><input type=password name=confirmPassword class=form-control ng-model=vm.user.confirmPassword match=vm.user.newPassword ng-minlength=3 required><p class=help-block ng-show="form.confirmPassword.$error.match && vm.submitted">Passwords must match.</p></div><p class=help-block>{{ vm.message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div>'),a.put("app/account/signup/signup.html",'<div class=container><div class=row><div class=col-sm-12><h1>Sign up</h1></div><div class=col-sm-12><form class=form name=form ng-submit=vm.register(form) novalidate><div class=form-group ng-class="{ \'has-success\': form.name.$valid && vm.submitted,\n                                            \'has-error\': form.name.$invalid && vm.submitted }"><label>Name</label><input name=name class=form-control ng-model=vm.user.name required><p class=help-block ng-show="form.name.$error.required && vm.submitted">A name is required</p></div><div class=form-group ng-class="{ \'has-success\': form.email.$valid && vm.submitted,\n                                            \'has-error\': form.email.$invalid && vm.submitted }"><label>Email</label><input type=email name=email class=form-control ng-model=vm.user.email required mongoose-error><p class=help-block ng-show="form.email.$error.email && vm.submitted">Doesn\'t look like a valid email.</p><p class=help-block ng-show="form.email.$error.required && vm.submitted">What\'s your email address?</p><p class=help-block ng-show=form.email.$error.mongoose>{{ vm.errors.email }}</p></div><div class=form-group ng-class="{ \'has-success\': form.password.$valid && vm.submitted,\n                                            \'has-error\': form.password.$invalid && vm.submitted }"><label>Password</label><input type=password name=password class=form-control ng-model=vm.user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required) && vm.submitted">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ vm.errors.password }}</p></div><div class=form-group ng-class="{ \'has-success\': form.confirmPassword.$valid && vm.submitted,\n                                            \'has-error\': form.confirmPassword.$invalid && vm.submitted }"><label>Confirm Password</label><input type=password name=confirmPassword class=form-control ng-model=vm.user.confirmPassword match=vm.user.password ng-minlength=3 required><p class=help-block ng-show="form.confirmPassword.$error.match && vm.submitted">Passwords must match.</p></div><div><button class="btn btn-inverse btn-lg btn-register" type=submit>Sign up</button> <a class="btn btn-default btn-lg btn-login" ui-sref=login>Login</a></div><hr><div class=row><div class="col-sm-4 col-md-3"><oauth-buttons classes=btn-block></oauth-buttons></div></div></form></div></div><hr></div>'),a.put("app/admin/admin.html",'<div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class="list-group user-list"><li class=list-group-item ng-repeat="user in admin.users"><div class=user-info><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span></div><a ng-click=admin.delete(user) class=trash><span class="fa fa-trash fa-2x"></span></a></li></ul></div>'),a.put("app/questionsCreate/questionsCreate.html",'<div class=container><form name=form ng-submit=submit()><h2>Title:</h2><input class=form-control ng-model=question.title name=question_title required> <span class=text-danger ng-messages=form.question_title.$error><span ng-message=required>Required</span></span> <span class=text-success ng-show=form.question_title.$valid>OK</span><br><h2>Question:</h2><pagedown-editor ng-model=question.content name=question_content required></pagedown-editor><span class=text-danger ng-messages=form.question_content.$error><span ng-message=required>Required</span></span> <span class=text-success ng-show=form.question_content.$valid>OK</span><h2>Tags:</h2><tags-input ng-model=question.tags><!-- <auto-complete source="loadTags($query)"></auto-complete> --></tags-input><input type=submit class="btn btn-primary" ng-disabled=form.$invalid value="Post question"></form></div>'),a.put("app/questionsIndex/questionsIndex.html",'<header class=hero-unit id=banner><div class=container><h1>Ask Kimberly Synder</h1><!--     <p class="lead">How to make QA sites like this: <a style="color: #c0c0c0;" href="http://engineering.paiza.io/entry/2016/03/10/115345">Building a QA web service in an hour - MEAN stack development(3)</a></p>\n --><!--     <img src="assets/images/yeoman.462ccecb.png" alt="I\'m Yeoman">--></div></header><div class=container infinite-scroll=nextPage() infinite-scroll-disabled="busy || noMoreData"><br><div style="text-align: center"><a type=button class="btn btn-primary" href=/questions/create>Ask Question</a></div><table class="table table-striped"><thead><tr><th width=20>Stars</th><th width=20>Answers</th><th>Question</th></tr></thead><tbody><tr ng-repeat="question in questions"><td style="text-align: center; vertical-align:middle"><div style="font-size: xx-large">{{question.stars.length}}</div></td><td style="text-align: center; vertical-align:middle"><div style="font-size: xx-large">{{question.answers.length}}</div></td><td><div style="float: right"><span ng-if=" isStar(question)" class="glyphicon glyphicon-star" style="color: #CF7C00"></span> <span ng-if=!isStar(question) class="glyphicon glyphicon-star-empty"></span></div><a ng-href=/questions/show/{{question._id}} style="font-size: large">{{question.title}}</a><div class=clearfix></div><div style="float: right">by <a ng-href=/users/{{question.user._id}}>{{question.user.name}}</a> - {{question.createdAt|fromNow}}</div><div><span ng-repeat="tag in question.tags"><span class="label label-info">{{tag.text}}</span> &nbsp;</span></div><div class=clearfix></div></td></tr></tbody></table><div ng-show=busy>Loading data...</div></div>'),a.put("app/questionsShow/questionsShow.html",'<div class=container id=question-show-container><div><button ng-if=isOwner(question) type=button class=close ng-click=deleteQuestion()>&times;</button><div style="float: left;font-size: x-large; padding: 0; width: 2em; text-align: center"><button ng-if=" isStar(question)" type=button style="background: transparent; border: 0" ng-click="unstar(\'\')"><span class="glyphicon glyphicon-star" style="color: #CF7C00"></span></button> <button ng-if=!isStar(question) type=button style="background: transparent; border: 0" ng-click="star(\'\')"><span class="glyphicon glyphicon-star-empty"></span></button><br><div>{{question.stars.length}}</div></div><div><h1><div ng-if="! editting">{{question.title}}</div><input ng-model=question.title ng-if=" editting"></h1><span ng-repeat="tag in question.tags"><span class="label label-info">{{tag.text}}</span></span></div></div><hr><pagedown-viewer content=question.content ng-if=!editting></pagedown-viewer><pagedown-editor ng-model=question.content ng-if=" editting"></pagedown-editor><button type=submit class="btn btn-primary" ng-click="editting=false;updateQuestion()" ng-show=" editting">Save</button> <a ng-click="editting=!editting;" ng-show="isOwner(question) && !editting">Edit</a><div class=text-right>by <a ng-href=/users/{{question.user._id}}>{{question.user.name}}</a> - {{question.createdAt|fromNow}}</div>&nbsp;<div class=comment><div ng-repeat="comment in question.comments"><hr><button ng-if=isOwner(comment) type=button class=close ng-click=deleteComment(comment)>&times;</button><div style="float: left;font-size: normal; padding: 0; width: 2em; text-align: center"><button ng-if=" isStar(comment)" type=button style="background: transparent; border: 0" ng-click="unstar(\'/comments/\' + comment._id)"><span class="glyphicon glyphicon-star" style="color: #CF7C00"></span></button> <button ng-if=!isStar(comment) type=button style="background: transparent; border: 0" ng-click="  star(\'/comments/\' + comment._id)"><span class="glyphicon glyphicon-star-empty"></span></button><br><div>{{comment.stars.length}}</div></div><pagedown-viewer content=comment.content ng-if=!editting></pagedown-viewer><pagedown-editor ng-model=comment.content ng-if=" editting"></pagedown-editor><button type=submit class="btn btn-primary" ng-click="editting=false;updateComment(comment)" ng-show=" editting">Save</button> <a ng-click="editting=!editting;" ng-show="isOwner(comment) && !editting">Edit</a><div class=text-right style="vertical-align: bottom">by <a ng-href=/users/{{comment.user._id}}>{{comment.user.name}}</a> - {{comment.createdAt|fromNow}}</div><div class=clearfix></div></div><hr><a ng-click="editNewComment=!editNewComment;">add a comment</a><form ng-if=editNewComment name=commentForm><pagedown-editor ng-model=newComment.content editor-class="\'comment-wmd-input\'" name=commentEditor required></pagedown-editor><button type=button class="btn btn-primary" ng-click=submitComment() ng-disabled=commentForm.$invalid>Add Comment</button></form></div>&nbsp;<h3>{{question.answers.length}} Answers</h3><div ng-repeat="answer in question.answers"><hr><div style="float: left;font-size: large; padding: 0; width: 2em; text-align: center"><button ng-if=" isStar(answer)" type=button style="background: transparent; border: 0" ng-click="unstar(\'/answers/\' + answer._id)"><span class="glyphicon glyphicon-star" style="color: #CF7C00"></span></button> <button ng-if=!isStar(answer) type=button style="background: transparent; border: 0" ng-click="  star(\'/answers/\' + answer._id)"><span class="glyphicon glyphicon-star-empty"></span></button><br><div>{{answer.stars.length}}</div></div><div class=answer><button ng-if=isOwner(answer) type=button class=close ng-click=deleteAnswer(answer)>&times;</button><pagedown-viewer content=answer.content ng-if=!editting></pagedown-viewer><pagedown-editor ng-model=answer.content ng-if=" editting"></pagedown-editor><button type=submit class="btn btn-primary" ng-click="editting=false;updateAnswer(answer)" ng-show=" editting">Save</button> <a ng-click="editting=!editting;" ng-show="isOwner(answer) && !editting">Edit</a></div><div class=text-right>by {{answer.user.name}} - {{answer.createdAt|fromNow}}</div><div class=comment><div ng-repeat="comment in answer.comments"><hr><button ng-if=isOwner(comment) type=button class=close ng-click="deleteAnswerComment(answer, comment)">&times;</button><div style="float: left;font-size: normal; padding: 0; width: 2em; text-align: center"><button ng-if=" isStar(comment)" type=button style="background: transparent; border: 0" ng-click="unstar(\'/answers/\' + answer._id + \'/comments/\' + comment._id)"><span class="glyphicon glyphicon-star" style="color: #CF7C00"></span></button> <button ng-if=!isStar(comment) type=button style="background: transparent; border: 0" ng-click="  star(\'/answers/\' + answer._id + \'/comments/\' + comment._id)"><span class="glyphicon glyphicon-star-empty"></span></button><br><div>{{comment.stars.length}}</div></div><pagedown-viewer content=comment.content ng-if=!editting></pagedown-viewer><pagedown-editor ng-model=comment.content ng-if=" editting"></pagedown-editor><button type=submit class="btn btn-primary" ng-click="editting=false;updateAnswerComment(answer, comment)" ng-show=" editting">Save</button> <a ng-click="editting=!editting;" ng-show="isOwner(comment) && !editting">Edit</a><div class=text-right>by <a ng-href=/users/{{question.user._id}}>{{comment.user.name}}</a> - {{comment.createdAt|fromNow}}</div><div class=clearfix></div></div><hr><a ng-click="editNewAnswerComment=!editNewAnswerComment;answer.newAnswerComment={}">add a comment</a><form ng-if=editNewAnswerComment name=answer_{{answer.id}}_comment><hr><pagedown-editor ng-model=answer.newAnswerComment.content editor-class="\'comment-wmd-input\'" required></pagedown-editor><button type=button class="btn btn-primary" ng-click=submitAnswerComment(answer) ng-disabled=answer_{{answer.id}}_comment.$invalid>Add Comment</button></form></div></div><hr><h3>Your answer</h3><form name=answerForm ng-submit=submitAnswer()><pagedown-editor ng-model=newAnswer.content name=answerEditor required></pagedown-editor><input type=submit class="btn btn-primary" ng-disabled=answerForm.$invalid value="Submit your answer"></form></div>'),a.put("components/footer/footer.html",'<div class=container><p>Your AI connection to<!--   Angular Fullstack v3.3.0 |--><a href=https://twitter.com/_KimberlySnyder>Kimberly Snyder</a><!--     <a href="https://github.com/DaftMonk/generator-angular-fullstack/issues?state=open">Issues</a> --></p></div>'),a.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div></div><div class=modal-footer><button ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button></div>'),a.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarController><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="nav.isCollapsed = !nav.isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>sage</a></div><div collapse=nav.isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-repeat="item in nav.menu" ng-class="{active: isActive(item.link())}" ng-show=item.show()><a ng-href={{item.link()}}>{{item.title}}</a></li></ul><form class="navbar-form navbar-left" role=search ng-submit=nav.search(keyword)><div class=input-group><input class=form-control placeholder=Search ng-model=keyword> <span class=input-group-btn><button type=submit class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button></span></div></form><ul class="nav navbar-nav navbar-right"><li ng-hide=nav.isLoggedIn() ui-sref-active=active><a ui-sref=signup>Sign up</a></li><li ng-hide=nav.isLoggedIn() ui-sref-active=active><a ui-sref=login>Login</a></li><li ng-show=nav.isLoggedIn()><p class=navbar-text>Hello {{ nav.getCurrentUser().name }}</p></li><li ng-show=nav.isLoggedIn() ui-sref-active=active><a ui-sref=settings><span class="glyphicon glyphicon-cog"></span></a></li><li ng-show=nav.isLoggedIn()><a ui-sref=logout>Logout</a></li></ul></div></div></div>'),
a.put("components/oauth-buttons/oauth-buttons.html",'<a ng-class=classes ng-click="OauthButtons.loginOauth(\'facebook\')" class="btn btn-social btn-facebook"><i class="fa fa-facebook"></i> Connect with Facebook</a> <a ng-class=classes ng-click="OauthButtons.loginOauth(\'google\')" class="btn btn-social btn-google"><i class="fa fa-google-plus"></i> Connect with Google+</a> <a ng-class=classes ng-click="OauthButtons.loginOauth(\'twitter\')" class="btn btn-social btn-twitter"><i class="fa fa-twitter"></i> Connect with Twitter</a>')}]);